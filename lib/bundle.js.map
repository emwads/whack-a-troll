{"version":3,"sources":["webpack:///webpack/bootstrap 9f37728f8c2c4646d87a","webpack:///./lib/whack-a-troll.js","webpack:///./lib/game-control.js","webpack:///./lib/image-constants.js","webpack:///./lib/game-parts.js","webpack:///./lib/critter.js","webpack:///./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA,EAAC;;;;;;;ACZD;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,+CAA8C,+BAA+B;AAC7E;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,yBAAyB,EAAE;AACnD,IAAG;;AAEH,4BAA2B,mBAAmB;;AAE9C;AACA;AACA,yBAAwB,yBAAyB,EAAE;AACnD,IAAG;;AAEH,4BAA2B,mBAAmB;AAC9C;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACTA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;;AAGA;;AAEA,+BAA8B;AAC9B;AACA,wDAAuD;AACvD,+BAA8B;AAC9B;AACA,wDAAuD;AACvD;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,IAAG;AACH;;;AAGA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;;;AAKA;AACA;AACA;;;;;;AAMA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,qBAAoB,EAAE,IAAI,EAAE;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAMA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9f37728f8c2c4646d87a\n **/","// const GameParts = require(\"./game-parts\");\nconst GameControl = require(\"./game-control\");\nconst ImageConstants = require(\"./image-constants\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  const canvasEl = document.getElementById(\"myCanvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n\n  new GameControl(ctx);\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/whack-a-troll.js\n ** module id = 0\n ** module chunks = 0\n **/","const ImageConstants = require(\"./image-constants\");\nconst GameParts = require(\"./game-parts\");\n\n\nconst GameControl = function (ctx) {\n  this.ctx = ctx;\n  this.loaded = {};\n  this.img = {};\n  this.loadImages();\n\n  this.players = [];\n\n\n  this.startTime = new Date;\n  this.gameTime = 60000; //Game length in milliseconds\n};\n\nGameControl.PLAYER1MOVES = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n};\n\nGameControl.PLAYER2MOVES = {\n  \"p\": [ 0, -1],\n  \"l\": [-1,  0],\n  \";\": [ 0,  1],\n  \"'\": [ 1,  0],\n};\n\n\nGameControl.prototype.loadImages = function() {\n  const self = this;\n  Object.keys(ImageConstants).forEach ( (imageKey) => {\n    let img = new Image();\n    img.src = ImageConstants[imageKey];\n    img.addEventListener(\"load\", function(e) {self.checkLoaded(e, imageKey);}, false);\n    this.img[imageKey] = img;\n  });\n\n};\n\nGameControl.prototype.checkLoaded = function(e, imageKey) {\n  this.loaded[imageKey] = true;\n\n  if (Object.keys(this.loaded).length === Object.keys(ImageConstants).length) {\n    console.log(\"all loaded!\");\n\n    this.gameParts = new GameParts(this.ctx, this.img);\n\n    this.players = this.gameParts.addPlayers();\n\n    this.start();\n  }\n\n};\n\n\nGameControl.prototype.bindKeyHandlers = function () {\n  const player1 = this.players[0];\n  const player2 = this.players[1];\n\n  Object.keys(GameControl.PLAYER1MOVES).forEach((k) => {\n    let increment = GameControl.PLAYER1MOVES[k];\n    key(k, function () { player1.move(increment); });\n  });\n\n  // key(\"e\", function () { player1.strike() });\n\n  Object.keys(GameControl.PLAYER2MOVES).forEach((k) => {\n    let increment = GameControl.PLAYER2MOVES[k];\n    key(k, function () { player2.move(increment); });\n  });\n\n  // key(\"o\", function () { player2.strike() });\n};\n\n\n\nGameControl.prototype.updateTime = function (timeLeft) {\n  if (timeLeft < 0) {\n    timeLeft = 0;\n  }\n  document.getElementById(\"time\").textContent = Math.round(timeLeft);\n};\n\n\nGameControl.prototype.start = function () {\n  // this.gameParts = new GameParts(this.ctx, this.img);\n  this.bindKeyHandlers();\n  this.time = new Date;\n\n  this.animate();\n\n\n};\n\n\nGameControl.prototype.animate = function(){\n  let timeLeft = (this.gameTime - (new Date - this.time))/1000;\n\n  this.updateTime(timeLeft);\n  // this.gameParts.step();\n  this.gameParts.draw();\n  // console.log(timeLeft);\n\n\n  if (timeLeft > 0) {\n    requestAnimationFrame(this.animate.bind(this));\n  } else {\n    console.log('game over');\n  }\n\n};\n\n\nGameControl.prototype.startRound = function () {\n\n\n  // this.bindKeyHandlers();\n  // this.lastTime = 0;\n  // //start the animation\n  // requestAnimationFrame(this.animate.bind(this));\n//\n// GameControl.prototype.animate = function(time){\n//   const timeDelta = time - this.lastTime;\n//\n//   this.gameParts.step(timeDelta);\n//   this.gameParts.draw(this.ctx);\n//   this.lastTime = time;\n//\n//   //every call to animate requests causes another call to animate\n//   requestAnimationFrame(this.animate.bind(this));\n};\n\n\n\n\n\nmodule.exports = GameControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game-control.js\n ** module id = 1\n ** module chunks = 0\n **/","const ImageConstants = {\n  troll: 'image/troll.png',\n  mallet1: 'image/hammer.png',\n  mallet2: 'image/hammer2.png',\n  mole: 'image/mole.png',\n  back: 'image/hill.png',\n  mound: 'image/mound.png'\n};\n\nmodule.exports = ImageConstants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/image-constants.js\n ** module id = 2\n ** module chunks = 0\n **/","const Critter = require(\"./critter\");\nconst Player = require(\"./player\");\nconst ImageConstants = require(\"./image-constants\");\n\n\n\nconst GameParts = function (ctx, img) {\n\n  this.img = img;\n\n  this.ctx = ctx;\n  this.players = [];\n  this.critters = [];\n\n\n    this.score = [0, 0];\n\n\n  this.BG_COLOR = \"white\";\n\n  const canvasEl = document.getElementById(\"myCanvas\");\n  this.DIM_X = canvasEl.clientWidth;\n  this.DIM_Y = canvasEl.clientHeight;\n  GameParts.FPS = 32;\n};\n\n\nGameParts.prototype.addCritter = function (critter) {\n  let coords;\n  do {\n    coords = getRandCoords();\n  } while (this.mounds[coords[0]][coords[1]] !== undefined);\n\n  this.mounds[coords[0]][coords[1]] = critter;\n  return coords;\n};\n\n\nGameParts.prototype.addPlayers = function () {\n\n  this.players = [new Player({name: \"player1\", id: 0, pos: [2, 1],\n                              gameParts: this,\n                              img: this.img['mallet1']}),\n                  new Player({name: \"player2\", id: 1, pos: [2, 2],\n                              gameParts: this,\n                              img: this.img['mallet2']})];\n  return this.players;\n};\n\nGameParts.prototype.allObjects = function () {\n\n  return [].concat(this.players, this.critters);\n};\n\n\nGameParts.prototype.clearBoard = function () {\n  this.ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n  this.ctx.fillStyle = this.BG_COLOR;\n  this.ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n};\n\nGameParts.prototype.drawBackground = function () {\n  this.ctx.drawImage(this.img[\"back\"], 0, 0);\n};\n\n\nGameParts.prototype.draw = function () {\n\n  this.clearBoard();\n  this.drawBackground();\n\n  this.allObjects().forEach((object) => {\n    object.draw(this.ctx);\n  });\n};\n\nGameParts.prototype.updateScore = function () {\n  document.getElementById(\"score1\").textContent = this.score[0];\n  document.getElementById(\"score2\").textContent = this.score[1];\n};\n\n\n\nGameParts.prototype.moveObjects = function () {\n  this.allObjects().forEach((object) => {\n    object.move();\n  });\n};\n\n\nGameParts.prototype.remove = function (object) {\n\n};\n\nGameParts.prototype.step = function () {\n  this.moveObjects();\n};\n\n\nfunction getRandCoords(max) {\n  return [Math.floor(Math.random() * (max + 1)), Math.floor(Math.random() * (max + 1))];\n}\n\nmodule.exports = GameParts;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game-parts.js\n ** module id = 3\n ** module chunks = 0\n **/","\nconst Critter = function (options) {\n  this.pos = options.pos;\n  this.gameParts = options.gameParts;\n  this.img = options.img;\n  this.points = options.points;\n  this.scale = [50, 50];\n  this.hit = false;\n};\n\n\nCritter.prototype.draw = function (ctx) {\n  const x = 250 + (50 * this.pos[0]);\n  const y = 300 + (65 * this.pos[1]);\n  ctx.drawImage(this.img, x, y, this.scale[0], this.scale[1]);\n\n\n};\n\n\n\n\nCritter.prototype.remove = function () {\n  this.gameParts.remove(this);\n};\n\n\n\n\n\nmodule.exports = Critter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/critter.js\n ** module id = 4\n ** module chunks = 0\n **/","\nconst Player = function (options) {\n  this.pos = options.pos;\n  this.gameParts = options.gameParts;\n  this.img = options.img;\n  this.scale = [25, 25];\n  this.playerName = options.name;\n  this.playerId = options.id;\n\n};\n\n\nPlayer.prototype.draw = function (ctx) {\n  const x = 75 + (125 * this.pos[0]);\n  const y = 125 + (100 * this.pos[1]);\n  // console.log(`${x}, ${y}`)\n  ctx.drawImage(this.img, x, y, this.scale[0], this.scale[1]);\n};\n\nPlayer.prototype.move = function (increment) {\n  const newY = this.pos[1] + increment[1];\n  const newX = this.pos[0] + increment[0];\n\n  if (newY <= 3 && newY >= 0) {\n    this.pos[1] = newY;\n  }\n\n  if (newX >= 0 && newX <=4) {\n    this.pos[0] =newX;\n  }\n  console.log(this.pos);\n};\n\nPlayer.prototype.remove = function () {\n  this.gameParts.remove(this);\n};\n\n\n\n\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}