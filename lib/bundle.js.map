{"version":3,"sources":["webpack:///webpack/bootstrap e1c20bbb9d264370f5af","webpack:///./lib/whack-a-troll.js","webpack:///./lib/game-control.js","webpack:///./lib/image-constants.js","webpack:///./lib/game-parts.js","webpack:///./lib/critter.js","webpack:///./lib/player.js","webpack:///./lib/computer-player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA,EAAC;;;;;;;ACZD;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,+CAA8C,+BAA+B;AAC7E;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,yBAAwB,yBAAyB,EAAE;AACnD,IAAG;;AAEH,4BAA2B,iBAAiB,EAAE;;AAE9C;AACA;AACA,yBAAwB,yBAAyB,EAAE;AACnD,IAAG;;AAEH,4BAA2B,iBAAiB,EAAE;AAC9C;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA,+BAA8B;AAC9B;AACA,wDAAuD;;AAEvD;AACA,2CAA0C;AAC1C;AACA,0DAAyD;;AAEzD;AACA;AACA,IAAG;AACH,mCAAkC;AAClC;AACA,0DAAyD;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC,oBAAmB,eAAe;AAClC;AACA;;AAEA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,eAAc,2BAA2B;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;AACA;;;;AAIA;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,SAAQ,qBAAqB;;;AAG7B;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;;;;;AChEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,SAAQ,qBAAqB;;;AAG7B;;AAEA;AACA;;;;;AAKA;AACA;AACA;;;;AAIA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e1c20bbb9d264370f5af\n **/","// const GameParts = require(\"./game-parts\");\nconst GameControl = require(\"./game-control\");\nconst ImageConstants = require(\"./image-constants\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  const canvasEl = document.getElementById(\"myCanvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n\n  new GameControl(ctx);\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/whack-a-troll.js\n ** module id = 0\n ** module chunks = 0\n **/","const ImageConstants = require(\"./image-constants\");\nconst GameParts = require(\"./game-parts\");\n\n\nconst GameControl = function (ctx) {\n  this.ctx = ctx;\n  this.loaded = {};\n  this.img = {};\n  this.loadImages();\n\n  this.players = [];\n  this.startTime = new Date;\n  this.gameTime = 30000; //Game length in milliseconds\n};\n\nGameControl.PLAYER1MOVES = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n};\n\nGameControl.PLAYER2MOVES = {\n  \"p\": [ 0, -1],\n  \"l\": [-1,  0],\n  \";\": [ 0,  1],\n  \"'\": [ 1,  0],\n};\n\n\nGameControl.prototype.loadImages = function() {\n  const self = this;\n  Object.keys(ImageConstants).forEach ( (imageKey) => {\n    let img = new Image();\n    img.src = ImageConstants[imageKey];\n    img.addEventListener(\"load\", function(e) {self.checkLoaded(e, imageKey);}, false);\n    this.img[imageKey] = img;\n  });\n\n};\n\nGameControl.prototype.checkLoaded = function(e, imageKey) {\n  const self=this;\n  this.loaded[imageKey] = true;\n\n  if (Object.keys(this.loaded).length === Object.keys(ImageConstants).length) {\n    // console.log(\"all loaded!\");\n\n    const buttonEl = document.getElementById(\"start-button\");\n    buttonEl.addEventListener(\"click\", self.start.bind(self, e, false));\n    buttonEl.className=\"\";\n    const aiButtonEl = document.getElementById(\"start-button-ai\");\n    aiButtonEl.addEventListener(\"click\", self.start.bind(self, e, true));\n    aiButtonEl.className=\"\";\n\n  }\n};\n\n\nGameControl.prototype.bindKeyHandlers = function () {\n  const player1 = this.players[0];\n  const player2 = this.players[1];\n\n\n  Object.keys(GameControl.PLAYER1MOVES).forEach((k) => {\n    let increment = GameControl.PLAYER1MOVES[k];\n    key(k, function () { player1.move(increment); });\n  });\n\n  key(\"e, q\", function () { player1.whack(); });\n\n  Object.keys(GameControl.PLAYER2MOVES).forEach((k) => {\n    let increment = GameControl.PLAYER2MOVES[k];\n    key(k, function () { player2.move(increment); });\n  });\n\n  key(\"o, [\", function () { player2.whack(); });\n};\n\n\n\nGameControl.prototype.unbindKeyHandlers = function () {\n  let someKeys = [].concat( Object.keys(GameControl.PLAYER1MOVES),\n                        Object.keys(GameControl.PLAYER2MOVES), ['e', 'q', 'o', '[' ]);\n\n  someKeys.forEach((k) => {\n    key.unbind(k);\n});\n};\n\n\n\nGameControl.prototype.updateTime = function (timeLeft) {\n  if (timeLeft < 0) {\n    timeLeft = 0;\n  }\n  document.getElementById(\"time\").textContent = Math.round(timeLeft);\n};\n\n\nGameControl.prototype.start = function (e, ai = false) {\n  document.getElementById(\"start-button\").className=\"hidden\";\n  document.getElementById(\"start-button-ai\").className=\"hidden\";\n  document.getElementById(\"game-info\").className=\"game-info\";\n\n  this.gameParts = new GameParts(this.ctx, this.img);\n\n  this.players = this.gameParts.addPlayers(ai);\n\n  this.bindKeyHandlers();\n  this.time = new Date;\n  this.gameParts.addCritters();\n\n\n  this.animate();\n};\n\n\nGameControl.prototype.animate = function(){\n  let timeLeft = (this.gameTime - (new Date - this.time))/1000;\n\n  this.updateTime(timeLeft);\n  this.gameParts.updateScore();\n  this.gameParts.draw();\n\n\n  if (timeLeft > 0) {\n    requestAnimationFrame(this.animate.bind(this));\n  } else {\n    this.end();\n    document.getElementById(\"start-button\").className=\"\";\n    document.getElementById(\"start-button-ai\").className=\"\";\n\n\n  }\n\n};\n\n\nGameControl.prototype.end = function () {\n  this.gameParts.trolling = false;\n  this.unbindKeyHandlers();\n  this.gameParts.drawEnd();\n\n};\n\n\n\n\n\nmodule.exports = GameControl;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game-control.js\n ** module id = 1\n ** module chunks = 0\n **/","const ImageConstants = {\n  troll: 'image/troll.png',\n  mallet2: 'image/hammer1.png',\n  mallet1: 'image/hammer2.png',\n  mole: 'image/mole.png',\n  back: 'image/hill.png',\n  mound: 'image/mound.png',\n  miss2: 'image/no1.png',\n  miss1: 'image/no2.png',\n  hit2: 'image/hit1.png',\n  hit1: 'image/hit2.png'\n};\n\nmodule.exports = ImageConstants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/image-constants.js\n ** module id = 2\n ** module chunks = 0\n **/","const Critter = require(\"./critter\");\nconst Player = require(\"./player\");\nconst ComputerPlayer = require(\"./computer-player\");\nconst ImageConstants = require(\"./image-constants\");\n\n\n\nconst GameParts = function (ctx, img) {\n\n  this.img = img;\n  this.ctx = ctx;\n\n  this.players = [];\n  this.critters = [];\n  this.crittersTimeouts = [];\n\n  this.score = [0, 0];\n  this.trolling = true;\n\n  const canvasEl = document.getElementById(\"myCanvas\");\n  this.BG_COLOR = \"white\";\n  this.MAXX = 4;\n  this.MAXY = 3;\n  this.DIM_X = canvasEl.clientWidth;\n  this.DIM_Y = canvasEl.clientHeight;\n  GameParts.FPS = 32;\n\n};\n\n\n\nGameParts.prototype.addPlayers = function (ai) {\n\n  this.players = [new Player({name: \"player1\", id: 0, pos: [1, 1],\n                              gameParts: this,\n                              img: this.img['mallet1']})];\n\n  if (ai) {\n    this.players.push(new ComputerPlayer({name: \"computer\", id: 1, pos: [2, 1],\n                                gameParts: this,\n                                img: this.img['mallet2']}));\n\n    document.getElementById(\"player2\").textContent = \"Computer: \";\n    this.players[1].playGame();\n  } else {\n    this.players.push(new Player({name: \"player2\", id: 1, pos: [2, 1],\n                                gameParts: this,\n                                img: this.img['mallet2']}));\n\n  }\n  return this.players;\n};\n\nGameParts.prototype.addSingleCritter = function (troll) {\n  const lifeSpan =  Math.random() * (5000 - 2000) + 2000;\n  const pos = this.getRandCoords();\n\n  let img, hitImg1, hitImg2, points;\n  if (troll) {\n    img = this.img[\"troll\"];\n    hitImg1 = this.img[\"hit1\"];\n    hitImg2 = this.img[\"hit2\"];\n    points = 10;\n  } else {\n    img = this.img[\"mole\"];\n    hitImg1 = this.img[\"miss1\"];\n    hitImg2 = this.img[\"miss2\"];\n    points = -10;\n  }\n\n  this.critters.push(\n    new Critter( {pos: pos,\n                  gameParts: this,\n                  img: img,\n                  hitImg1: hitImg1,\n                  hitImg2: hitImg2,\n                  points: points,\n                  life:lifeSpan})\n  );\n};\n\n\nGameParts.prototype.addCritters = function(){\n  if (this.critters.length < 7) {\n    const chance = Math.random();\n\n    this.addSingleCritter(chance > 0.25);\n    // console.log('added critter');\n\n  }\n\n  const refreshTime = Math.random() * (1000 - 500) + 250;\n  // console.log(refreshTime);\n  if (this.trolling) {\n    window.setTimeout(this.addCritters.bind(this), refreshTime);\n  }\n};\n\n\nGameParts.prototype.allObjects = function () {\n  return [].concat( this.critters, this.players);\n};\n\n\nGameParts.prototype.clearBoard = function () {\n  this.ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n  this.ctx.fillStyle = this.BG_COLOR;\n  this.ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n};\n\nGameParts.prototype.drawBackground = function () {\n  this.ctx.drawImage(this.img[\"back\"], 0, 0);\n};\n\n\nGameParts.prototype.drawMounds = function () {\n\nlet x;\nlet y;\n  for (let i = 0; i < this.MAXX; i++) {\n    for (let j = 0; j < this.MAXY; j++) {\n       x = 25 + (175 * i);\n       y = 120 + (125 * j);\n\n       this.ctx.drawImage(this.img[\"mound\"], x, y);\n    }\n  }\n\n\n};\n\n\n\nGameParts.prototype.draw = function () {\n\n  this.clearBoard();\n  this.drawBackground();\n\n  this.allObjects().forEach((object) => {\n    object.draw(this.ctx);\n  });\n\n  this.drawMounds();\n};\n\nGameParts.prototype.updateScore = function () {\n  document.getElementById(\"score1\").textContent = this.score[0];\n  document.getElementById(\"score2\").textContent = this.score[1];\n};\n\nGameParts.prototype.whack = function (player) {\n  let loc, pos = player.pos;\n\n  loc = this.critters.findIndex( (critter) => {\n    if (critter.pos[0] === pos[0] && critter.pos[1] === pos[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  if (loc >= 0) {\n    if (this.critters[loc].hit === false) {\n      this.critters[loc].hit = player.playerId;\n\n      this.score[player.playerId] += this.critters[loc].points;\n      this.critters[loc].remove();\n    }\n\n  }\n\n\n};\n\n\n\n\nGameParts.prototype.removeCritter = function (critter) {\n  window.setTimeout( () => this.critters.splice(this.critters.indexOf(critter), 1), 1000);\n};\n\nGameParts.prototype.drawEnd = function () {\n  let text = \"\";\n  if (this.score[0] > this.score[1]) {\n    text = \"Player 1 won!\";\n  } else if (this.score[0] < this.score[1]) {\n    text = `${this.players[1].playerName} won!`;\n  }\n\n  this.ctx.font = \"bolder 60px sans-serif\";\n  this.ctx.textBaseline = \"center\";\n  this.ctx.textAlign = \"center\";\n  this.ctx.fillText(\"Game Over!\", this.DIM_X/2, this.DIM_Y/4);\n  this.ctx.strokeText(\"Game Over!\", this.DIM_X/2, this.DIM_Y/4);\n  this.ctx.fillText(text , this.DIM_X/2, this.DIM_Y/4 + 60);\n  this.ctx.strokeText(text , this.DIM_X/2, this.DIM_Y/4 + 60);\n\n};\n\n\n\n\nGameParts.prototype.getRandCoords = function () {\n  let pos, loc;\n\n  do {\n    pos = [Math.floor(Math.random() * (this.MAXX + 1)),\n    Math.floor(Math.random() * (this.MAXY + 1))];\n\n    loc = this.critters.findIndex( (critter) => {\n      if (critter.pos[0] === pos[0] && critter.pos[1] === pos[1]) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n  } while (loc >= 0);\n\n  return pos;\n};\n\n\n\nmodule.exports = GameParts;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game-parts.js\n ** module id = 3\n ** module chunks = 0\n **/","\nconst Critter = function (options) {\n  this.pos = options.pos;\n  this.gameParts = options.gameParts;\n  this.img = options.img;\n  this.hitImg = [options.hitImg1, options.hitImg2];\n  this.points = options.points; //point value\n  this.scale = [125, 100];\n\n  //lifetime in ms\n  this.life = options.life;\n  this.hit = false;\n  this.timer = window.setTimeout(this.remove.bind(this), options.life);\n\n};\n\n\nCritter.prototype.draw = function (ctx) {\n    const x = 25 + (175 * this.pos[0]);\n    const y = 120 + (125 * this.pos[1]);\n    ctx.drawImage(this.img, x, y, this.scale[0], this.scale[1]);\n\n    if (this.hit !== false) {\n\n\n      ctx.drawImage(this.hitImg[this.hit], x, y, this.scale[0], this.scale[1]);\n    }\n};\n\n\n\n\nCritter.prototype.remove = function () {\n  clearTimeout(this.timer);\n  this.gameParts.removeCritter(this);\n};\n\n\n\n\n\nmodule.exports = Critter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/critter.js\n ** module id = 4\n ** module chunks = 0\n **/","\nconst Player = function (options, callback) {\n  this.pos = options.pos;\n  this.gameParts = options.gameParts;\n  this.img = options.img;\n  this.scale = [125, 100];\n  this.playerName = options.name;\n  this.playerId = options.id;\n  this.hitting = false;\n\n\n\n};\n\n\nPlayer.prototype.draw = function (ctx) {\n  const x = 25 + (175 * this.pos[0]);\n  const y = 120 + (125 * this.pos[1]);\n\n  ctx.save();\n\n\n  if (this.hitting === true) {\n    if (this.playerId === 0) {\n      ctx.translate(x, y + 10);\n    } else {\n      ctx.translate(x, y + 10);\n    }\n  }\n  else { ctx.translate(x, y); }\n\n\n  ctx.drawImage(this.img, 0, 0, this.scale[0], this.scale[1]);\n\n  ctx.restore();\n};\n\n\nPlayer.prototype.move = function (increment) {\n  const newY = this.pos[1] + increment[1];\n  const newX = this.pos[0] + increment[0];\n\n  if (newY <= 2 && newY >= 0) {\n    this.pos[1] = newY;\n  }\n\n  if (newX >= 0 && newX <=3) {\n    this.pos[0] =newX;\n  }\n};\n\n\nPlayer.prototype.whack = function () {\n  this.gameParts.whack(this);\n  this.hitting = true;\n  window.setTimeout(this.resetHit.bind(this), 250);\n};\n\nPlayer.prototype.resetHit = function () {\n  this.hitting = false;\n};\n\n\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/player.js\n ** module id = 5\n ** module chunks = 0\n **/","const Player = require('./player.js');\n\nconst ComputerPlayer = function (options) {\n\n  // function Surrogate () {}\n  // Surrogate.prototype = Player.prototype;\n  // this.prototype = new Surrogate;\n  // this.prototype.constructor = ComputerPlayer;\n  // Player.call(this, options, this.playGame);\n\n  this.pos = options.pos;\n  this.gameParts = options.gameParts;\n  this.img = options.img;\n  this.scale = [125, 100];\n  this.playerName = options.name;\n  this.playerId = options.id;\n  this.hitting = false;\n};\n\nComputerPlayer.prototype.whack = function() {\n};\n\nComputerPlayer.prototype.move = function (increment) {\n};\n\n\nComputerPlayer.prototype.compWhack = function() {\n  this.gameParts.whack(this);\n  this.hitting = true;\n  window.setTimeout(this.resetHit.bind(this), 250);\n};\n\nComputerPlayer.prototype.calculateMove = function (increment) {\n\n\n};\n\nComputerPlayer.prototype.validateMove = function (increment) {\n  const newY = this.pos[1] + increment[1];\n  const newX = this.pos[0] + increment[0];\n\n  if (newY <= 2 && newY >= 0) {\n    this.pos[1] = newY;\n  }\n\n  if (newX >= 0 && newX <=3) {\n    this.pos[0] = newX;\n  }\n};\n\n\n\nComputerPlayer.prototype.playGame = function(){\n  let self = this;\n\n  const trollHere = this.gameParts.critters.findIndex( (el) => {\n    if (el.pos[0] === self.pos[0] &&\n        el.pos[1] === self.pos[1] &&\n        el.points > 0 &&\n        el.hit === false\n      ) {\n\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  if (trollHere >= 0) {\n    this.compWhack();\n  } else {\n    let pos;\n\n    const trollNear = this.gameParts.critters.findIndex( (el) => {\n      const xDist = el.pos[0] - self.pos[0];\n      const yDist = el.pos[1] - self.pos[1];\n      if ( ( Math.abs(xDist) <= 1 && Math.abs(yDist) <= 1 ) && el.points > 0 &&\n             el.hit === false) {\n        // console.log('trollnear!!!');\n        pos = [xDist, yDist];\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (trollNear === -1) {\n      const opts = [[0,1], [0,-1], [1,0], [-1, 0]];\n      pos = opts[Math.floor(Math.random()*4)];\n    }\n    this.validateMove(pos);\n  }\n\n  if (this.gameParts.trolling) {\n    window.setTimeout(this.playGame.bind(this), 400);\n  }\n};\n\nComputerPlayer.prototype.draw = function (ctx) {\n  const x = 25 + (175 * this.pos[0]);\n  const y = 120 + (125 * this.pos[1]);\n\n  ctx.save();\n\n\n  if (this.hitting === true) {\n    if (this.playerId === 0) {\n      ctx.translate(x, y + 10);\n    } else {\n      ctx.translate(x, y + 10);\n    }\n  }\n  else { ctx.translate(x, y); }\n\n\n  ctx.drawImage(this.img, 0, 0, this.scale[0], this.scale[1]);\n\n  ctx.restore();\n};\n\n\n\n\nComputerPlayer.prototype.resetHit = function () {\n  this.hitting = false;\n};\n\n\n\nmodule.exports = ComputerPlayer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/computer-player.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}